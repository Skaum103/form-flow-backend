AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  DBSecretName:
    Type: String
    Description: "AWS Secrets Manager secret name for database credentials"

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: FormFlowApi
      StageName: Prod
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "Form Flow API"
          description: "API Gateway for Form Flow Backend"
          version: "1.0"
        schemes:
          - "https"
        paths:
          /{proxy+}:
            x-amazon-apigateway-any-method:
              produces:
                - "application/json"
              parameters:
                - name: "proxy"
                  in: "path"
                  required: true
                  type: "string"
              responses: {}
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SpringBootLambdaFunction.Arn}/invocations"
                httpMethod: "POST"
                type: "aws_proxy"

  SpringBootLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: MySpringBootLambda
      Handler: com.example.form_flow_backend.StreamLambdaHandler::handleRequest
      Runtime: java21
      MemorySize: 1024
      Timeout: 30
      CodeUri: .
      Environment:
        Variables:
          DB_SECRET_NAME: !Ref DBSecretName
          API_GATEWAY_URL: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod"
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${DBSecretName}"
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY


